====================================pagehelper start====================================
1.PageHelper.startPage(pageNum,pageSize);
2.详见 TestBase 测试类
依赖配置：
        <!-- pagehelper -->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>1.2.3</version>
        </dependency>
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
            <version>5.0.0</version>
        </dependency>



====================================mybatis-generate====================================
1.详见配置于txv_service工程的generateConfig.xml
2.根据表生成实体类,mapper接口类,mapper.xml 和example类  只需配置 <table></table>即可
3.运行插件mybatis-generator:generate(或者 输入以下命令： mybatis-generator:generate -e)
4.https://blog.csdn.net/spring_ev/article/details/99675090
依赖配置：
          <!-- MyBatis 逆向工程 插件 -->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.2</version>
                <configuration>
                    <!--允许移动生成的文件 -->
                    <verbose>true</verbose>
                    <!-- 是否覆盖 -->
                    <overwrite>true</overwrite>
                </configuration>

                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.35</version>
                    </dependency>
                </dependencies>
            </plugin>

             <!-- SpringBoot - MyBatis 逆向工程 -->
        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
            <version>1.3.2</version>
        </dependency>



